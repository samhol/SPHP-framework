
400:
  type: client
  message: 'Bad Request'
  description: 'The request cannot be fulfilled due to bad syntax'
401:
  type: client
  message: 'Unauthorized'
  description: The request was a legal request, but the server is refusing to respond to it. For use when authentication is possible but has failed or not yet been provided
402:
  type: client
  message: Payment Required	
  description: Reserved for future use
403:
  type: client
  message: Forbidden
  description: The request was a legal request, but the server is refusing to respond to it
404:
  type: client
  message: Not Found
  description: The requested page could not be found but may be available again in the future
405:
  type: client
  message: Method Not Allowed
  description: A request was made of a page using a request method not supported by that page
406:
  type: client
  message: Not Acceptable
  description: The server can only generate a response that is not accepted by the client
407:
  type: client
  message: Proxy Authentication Required
  description: The client must first authenticate itself with the proxy
408:
  type: client
  message: Request Timeout
  description: The server timed out waiting for the request
409:
  type: client
  message: Conflict
  description: The request could not be completed because of a conflict in the request
410:
  type: client
  message: Gone
  description: The requested page is no longer available
411:
  type: client
  message: Length Required
  description: The "Content-Length" is not defined. The server will not accept the request without it 
412:
  type: client
  message: Precondition Failed
  description: The precondition given in the request evaluated to false by the server
413:
  type: client
  message: Request Entity Too Large
  description: The server will not accept the request, because the request entity is too large
414:
  type: client
  message: Request-URI Too Long
  description: The server will not accept the request, because the URL is too long. Occurs when you convert a POST request to a GET request with a long query information 
415:
  type: client
  message: Unsupported Media Type
  description: The server will not accept the request, because the media type is not supported 
416:
  type: client
  message: Requested Range Not Satisfiable
  description: The client has asked for a portion of the file, but the server cannot supply that portion
417:
  type: client
  message: Expectation Failed
  description: The server cannot meet the requirements of the Expect request-header field
  
418:
  type: client
  message: I'm a teapot (RFC 2324, RFC 7168)
This code was defined in 1998 as one of the traditional IETF April Fools' jokes, in RFC 2324, Hyper Text Coffee Pot Control Protocol, and is not expected to be implemented by actual HTTP servers. The RFC specifies this code should be returned by teapots requested to brew coffee.[53] This HTTP status is used as an Easter egg in some websites, such as Google.com's I'm a teapot easter egg.[54][55]
421:
  type: client
  message: Misdirected Request (RFC 7540)
The request was directed at a server that is not able to produce a response[56] (for example because of connection reuse).[57]
422:
  type: client
  message: Unprocessable Entity (WebDAV; RFC 4918)
The request was well-formed but was unable to be followed due to semantic errors.[16]
423:
  type: client
  message: Locked (WebDAV; RFC 4918)
The resource that is being accessed is locked.[16]
424:
  type: client
  message: Failed Dependency (WebDAV; RFC 4918)
The request failed because it depended on another request and that request failed (e.g., a PROPPATCH).[16]
425:
  type: client
  message: Too Early (RFC 8470)
Indicates that the server is unwilling to risk processing a request that might be replayed.
426:
  type: client
  message: Upgrade Required
The client should switch to a different protocol such as TLS/1.3, given in the Upgrade header field.[58]
428:
  type: client
  message: Precondition Required (RFC 6585)
The origin server requires the request to be conditional. Intended to prevent the 'lost update' problem, where a client GETs a resource's state, modifies it, and PUTs it back to the server, when meanwhile a third party has modified the state on the server, leading to a conflict.[59]
429:
  type: client
  message: Too Many Requests (RFC 6585)
The user has sent too many requests in a given amount of time. Intended for use with rate-limiting schemes.[59]
431:
  type: client
  message: Request Header Fields Too Large (RFC 6585)
The server is unwilling to process the request because either an individual header field, or all the header fields collectively, are too large.[59]
451:
  type: client
  message: Unavailable For Legal Reasons (RFC 7725)
A server operator has received a legal demand to deny access to a resource or to a set of resources that includes the requested resource.[60] The code 451 was chosen as a reference to the novel Fahrenheit 451 (see the Acknowledgements in the RFC).
500:
  type: server
  message: Internal Server Error
  description: A generic error message, given when no more specific message is suitable
501:
  type: server
  message: Not Implemented
  description: The server either does not recognize the request method, or it lacks the ability to fulfill the request
502:
  type: server
  message: Bad Gateway
  description: The server was acting as a gateway or proxy and received an invalid response from the upstream server
503:
  type: server
  message: Service Unavailable
  description: The server is currently unavailable (overloaded or down)
504:
  type: server
  message: Gateway Timeout
  description: The server was acting as a gateway or proxy and did not receive a timely response from the upstream server
505:
  type: server
  message: HTTP Version Not Supported
  description: The server does not support the HTTP protocol version used in the request
511:
  type: server
  message: Network Authentication Required
  description: The client needs to authenticate to gain network access